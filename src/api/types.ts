/* eslint-disable */
// This file is generated by scripts/generate-openapi.ts. Do not edit manually.

export type TaxType = "PAYGW" | "GST";
export type RailType = "EFT" | "BPAY" | "PayTo";

export interface ErrorResponse {
  error: string;
  detail?: string | null;
}

export interface CloseIssueRequest {
  abn: string;
  taxType: TaxType;
  periodId: string;
  thresholds?: Record<string, number> | null;
}

export interface RptPayload {
  entity_id: string;
  period_id: string;
  tax_type: TaxType;
  amount_cents: number;
  merkle_root: string;
  running_balance_hash: string;
  anomaly_vector: Record<string, number>;
  thresholds: Record<string, number>;
  rail_id: RailType;
  reference: string;
  expiry_ts: string;
  nonce: string;
}

export interface CloseIssueResponse {
  payload: RptPayload;
  signature: string;
}

export interface PayRequest {
  abn: string;
  taxType: TaxType;
  periodId: string;
  rail: Exclude<RailType, "PayTo">;
}

export interface PayResponse {
  transfer_uuid: string;
  bank_receipt_hash?: string;
  status?: string;
  [key: string]: unknown;
}

export interface PaytoSweepRequest {
  abn: string;
  amount_cents: number;
  reference: string;
}

export type PaytoSweepStatus = "OK" | "INSUFFICIENT_FUNDS" | "BANK_ERROR";

export interface PaytoSweepResponse {
  status: PaytoSweepStatus;
  bank_ref?: string | null;
}

export interface SettlementWebhookRequest {
  csv: string;
}

export interface SettlementWebhookResponse {
  ingested: number;
}

export interface EvidenceDelta {
  ts: string;
  amount_cents: number;
  hash_after?: string | null;
  bank_receipt_hash?: string | null;
}

export interface EvidenceResponse {
  bas_labels: Record<string, unknown>;
  rpt_payload: RptPayload | null;
  rpt_signature: string | null;
  owa_ledger_deltas: EvidenceDelta[];
  bank_receipt_hash: string | null;
  anomaly_thresholds: Record<string, number>;
  discrepancy_log: Array<Record<string, unknown>>;
}

export interface BalanceResponse {
  abn: string;
  taxType: string;
  periodId: string;
  balance_cents: number;
  has_release: boolean;
}

export interface LedgerEntry {
  id: number;
  amount_cents: number;
  balance_after_cents: number;
  rpt_verified?: boolean | null;
  release_uuid?: string | null;
  bank_receipt_id?: string | null;
  created_at: string;
}

export interface LedgerResponse {
  abn: string;
  taxType: string;
  periodId: string;
  rows: LedgerEntry[];
}

export interface DepositRequest {
  abn: string;
  taxType: string;
  periodId: string;
  amountCents: number;
}

export interface DepositResponse {
  ok: boolean;
  ledger_id: number;
  balance_after_cents: number;
}

export interface ReleaseRequest {
  abn: string;
  taxType: string;
  periodId: string;
  amountCents: number;
}

export interface ReleaseReference {
  rpt_id: number;
  kid?: string | null;
  payload_sha256: string;
}

export interface ReleaseResponse {
  ok: boolean;
  ledger_id: number;
  transfer_uuid: string;
  release_uuid: string;
  balance_after_cents: number;
  rpt_ref: ReleaseReference;
}

export interface HealthzResponse {
  status: string;
}

