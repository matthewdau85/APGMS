// Generated by tools/openapi-typescript.mjs. Do not edit manually.
// eslint-disable-next-line @typescript-eslint/triple-slash-reference
export interface components {
  schemas: {
    ReconcileRequest: {
          abn: string;
          taxType: "GST" | "PAYGW";
          periodId: string;
          thresholds?: {
                  [key: string]: number;
                };
        };
    RptPayload: {
          entity_id: string;
          period_id: string;
          tax_type: string;
          amount_cents: number;
          merkle_root: string;
          running_balance_hash: string;
          anomaly_vector: {
                  [key: string]: number;
                };
          thresholds: {
                  [key: string]: number;
                };
          rail_id: string;
          reference: string;
          expiry_ts: string;
          nonce: string;
        };
    RptIssueResponse: {
          payload: components["schemas"]["RptPayload"];
          signature: string;
        };
    LedgerDelta: {
          ts: string;
          amount_cents: number;
          hash_after?: string | null;
          bank_receipt_hash?: string | null;
        };
    EvidenceBundle: {
          bas_labels: {
                  [key: string]: string | null;
                };
          rpt_payload: components["schemas"]["RptPayload"] | null;
          rpt_signature: string | null;
          owa_ledger_deltas: (components["schemas"]["LedgerDelta"])[];
          bank_receipt_hash: string | null;
          anomaly_thresholds: {
                  [key: string]: number;
                };
          discrepancy_log: ({
                  [key: string]: unknown;
                })[];
        };
    BalanceResponse: {
          abn: string;
          taxType: string;
          periodId: string;
          balance_cents: number;
          has_release: boolean;
        };
    ErrorResponse: {
          error: string;
          detail?: string;
        };
  };
}

export interface paths {
  "/api/close-issue": {
    post: {
      requestBody: {
              required: true;
              content: {
                        "application/json": components["schemas"]["ReconcileRequest"];
                      };
            };
      responses: {
              "200": {
                description: "Issued remittance payload and signature";
                content: {
                            "application/json": components["schemas"]["RptIssueResponse"];
                          };
              };
              "400": {
                description: "Validation failure or blocked issuance";
                content: {
                            "application/json": components["schemas"]["ErrorResponse"];
                          };
              };
            };
    };
  };
  "/api/evidence": {
    get: {
      parameters: {
              query: {
                abn: string;
                taxType: "GST" | "PAYGW";
                periodId: string;
              };
            };
      responses: {
              "200": {
                description: "Evidence bundle containing ledger deltas and the most recent RPT";
                content: {
                            "application/json": components["schemas"]["EvidenceBundle"];
                          };
              };
            };
    };
  };
  "/balance": {
    get: {
      parameters: {
              query: {
                abn: string;
                taxType: "GST" | "PAYGW";
                periodId: string;
              };
            };
      responses: {
              "200": {
                description: "Balance information";
                content: {
                            "application/json": components["schemas"]["BalanceResponse"];
                          };
              };
              "400": {
                description: "Missing or invalid query parameters";
                content: {
                            "application/json": components["schemas"]["ErrorResponse"];
                          };
              };
              "500": {
                description: "Unexpected failure whilst computing the balance";
                content: {
                            "application/json": components["schemas"]["ErrorResponse"];
                          };
              };
            };
    };
  };
}
