import { promises as fs } from "fs";
import path from "path";
import { fileURLToPath } from "url";
import crypto from "crypto";

async function main() {
  const here = path.dirname(fileURLToPath(import.meta.url));
  const repoRoot = path.resolve(here, "..");
  const specPath = path.join(repoRoot, "api", "openapi.json");
  const outputPath = path.join(repoRoot, "libs", "node-sdk", "index.ts");

  const raw = await fs.readFile(specPath, "utf8");
  const hash = crypto.createHash("sha256").update(raw).digest("hex");
  const parsed = JSON.parse(raw);
  const serialized = JSON.stringify(parsed, null, 2);

  const header = `// This file is auto-generated by scripts/generate_client.ts\n` +
    `// Schema hash: ${hash}\n`;
  const body = `export const schema = ${serialized} as const;\n` +
    `export type OpenAPISchema = typeof schema;\n`;

  await fs.writeFile(outputPath, `${header}${body}`);
  console.log(`Generated TypeScript SDK at ${path.relative(repoRoot, outputPath)}`);
}

main().catch(err => {
  console.error(err);
  process.exitCode = 1;
});
